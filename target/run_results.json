{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-17T12:39:23.075685Z", "invocation_id": "92a35ba5-4b6e-4c44-82f4-dcc0f4fe66ff", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:16.186254Z", "completed_at": "2024-04-17T12:39:16.197635Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:16.200077Z", "completed_at": "2024-04-17T12:39:16.667418Z"}], "thread_id": "Thread-1", "execution_time": 0.4839365482330322, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perptreated_data", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as \n(\n   select\n       stream      :: varchar as stream\n       ,\"data_e\"   :: varchar as event_type\n       ,\"data_E\"   :: bigint as event_time\n       ,\"data_s\"   :: varchar as symbole_src\n       ,\"data_k_t\" :: bigint as candle_open_time\n       ,\"data_k_T\" :: bigint as candle_close_time\n       ,\"data_k_s\" :: varchar as symbole\n       ,\"data_k_i\" :: varchar as interval\n       ,\"data_k_f\" :: int as first_trade_id\n       ,\"data_k_L\" :: int as last_trade_id\n       ,\"data_k_o\" :: decimal as openprice\n       ,\"data_k_c\" :: decimal as close_price\n       ,\"data_k_h\" :: decimal as high_price\n       ,\"data_k_l\" :: decimal as low_price\n       ,\"data_k_v\" :: int as base_asset_volume\n       ,\"data_k_n\" :: int as  nb_trades\n       ,\"data_k_x\" :: boolean as candle_closed\n       ,\"data_k_q\" :: decimal as quote_asset_volume\n       ,\"data_k_V\" :: decimal as taker_buy_base_asset_volume\n       ,\"data_k_Q\" :: decimal as taker_buy_quote_asset_volume\n    from wizetrading.raw_data\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:16.675089Z", "completed_at": "2024-04-17T12:39:16.681277Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:16.683474Z", "completed_at": "2024-04-17T12:39:17.091993Z"}], "thread_id": "Thread-1", "execution_time": 0.419879674911499, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.raw_data_btc_perp", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as (\n    select * from source_btc_data\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"raw_data_btc_perp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:17.102983Z", "completed_at": "2024-04-17T12:39:17.107983Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:17.108982Z", "completed_at": "2024-04-17T12:39:17.470033Z"}], "thread_id": "Thread-1", "execution_time": 0.3720097541809082, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='15m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:17.481160Z", "completed_at": "2024-04-17T12:39:17.487007Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:17.489000Z", "completed_at": "2024-04-17T12:39:17.822714Z"}], "thread_id": "Thread-1", "execution_time": 0.34654855728149414, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '15m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:17.839184Z", "completed_at": "2024-04-17T12:39:17.848854Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:17.852229Z", "completed_at": "2024-04-17T12:39:18.215161Z"}], "thread_id": "Thread-1", "execution_time": 0.38125085830688477, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:18.230163Z", "completed_at": "2024-04-17T12:39:18.236319Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:18.239219Z", "completed_at": "2024-04-17T12:39:18.627155Z"}], "thread_id": "Thread-1", "execution_time": 0.4020204544067383, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:18.638661Z", "completed_at": "2024-04-17T12:39:18.651377Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:18.655116Z", "completed_at": "2024-04-17T12:39:18.989181Z"}], "thread_id": "Thread-1", "execution_time": 0.3551168441772461, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1w'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:19.000034Z", "completed_at": "2024-04-17T12:39:19.006945Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:19.009061Z", "completed_at": "2024-04-17T12:39:19.375480Z"}], "thread_id": "Thread-1", "execution_time": 0.3805551528930664, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1w'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:19.390116Z", "completed_at": "2024-04-17T12:39:19.401047Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:19.403696Z", "completed_at": "2024-04-17T12:39:19.756431Z"}], "thread_id": "Thread-1", "execution_time": 0.37397027015686035, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='4h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:19.771447Z", "completed_at": "2024-04-17T12:39:19.780119Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:19.782513Z", "completed_at": "2024-04-17T12:39:20.128237Z"}], "thread_id": "Thread-1", "execution_time": 0.36379122734069824, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '4h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:20.142675Z", "completed_at": "2024-04-17T12:39:20.147678Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:20.149898Z", "completed_at": "2024-04-17T12:39:20.484412Z"}], "thread_id": "Thread-1", "execution_time": 0.34766578674316406, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='5m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:20.499503Z", "completed_at": "2024-04-17T12:39:20.508977Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:20.511144Z", "completed_at": "2024-04-17T12:39:20.875580Z"}], "thread_id": "Thread-1", "execution_time": 0.38098573684692383, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '5m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:20.888020Z", "completed_at": "2024-04-17T12:39:20.895735Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:20.898615Z", "completed_at": "2024-04-17T12:39:21.277756Z"}], "thread_id": "Thread-1", "execution_time": 0.3965010643005371, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_15min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_15m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\"\n)\n,\nBTC_PERP_15m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\"\n),\nBTC_PERP_15m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_15m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_15m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_15m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_15m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_15m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:21.291277Z", "completed_at": "2024-04-17T12:39:21.301856Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:21.304366Z", "completed_at": "2024-04-17T12:39:21.698704Z"}], "thread_id": "Thread-1", "execution_time": 0.41164255142211914, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\"\n)\n,\nBTC_PERP_1h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\"\n),\nBTC_PERP_1h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:21.710204Z", "completed_at": "2024-04-17T12:39:21.722048Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:21.724876Z", "completed_at": "2024-04-17T12:39:22.078773Z"}], "thread_id": "Thread-1", "execution_time": 0.3745734691619873, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1week_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1w_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\"\n)\n,\nBTC_PERP_1w_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\"\n),\nBTC_PERP_1w_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1w_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1w_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1w_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1w_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1w_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:22.091783Z", "completed_at": "2024-04-17T12:39:22.099791Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:22.101787Z", "completed_at": "2024-04-17T12:39:22.440285Z"}], "thread_id": "Thread-1", "execution_time": 0.3541703224182129, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_4hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_4h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\"\n)\n,\nBTC_PERP_4h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\"\n),\nBTC_PERP_4h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_4h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_4h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_4h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_4h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_4h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:39:22.454568Z", "completed_at": "2024-04-17T12:39:22.466150Z"}, {"name": "execute", "started_at": "2024-04-17T12:39:22.469302Z", "completed_at": "2024-04-17T12:39:22.833014Z"}], "thread_id": "Thread-1", "execution_time": 0.386075496673584, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_5min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_5m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\"\n)\n,\nBTC_PERP_5m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\"\n),\nBTC_PERP_5m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_5m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_5m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_5m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_5m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_5m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_current_and_history\""}], "elapsed_time": 7.906006336212158, "args": {"invocation_command": "dbt run", "macro_debugging": false, "printer_width": 80, "print": true, "project_dir": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo", "log_level": "info", "populate_cache": true, "use_colors": true, "log_file_max_bytes": 10485760, "introspect": true, "cache_selected_only": false, "select": [], "send_anonymous_usage_stats": true, "log_path": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo\\logs", "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "version_check": true, "profiles_dir": "C:\\Users\\alarcher\\.dbt", "static_parser": true, "indirect_selection": "eager", "favor_state": false, "partial_parse_file_diff": true, "which": "run", "log_format_file": "debug", "partial_parse": true, "log_level_file": "debug", "vars": {}, "use_colors_file": true, "quiet": false, "enable_legacy_logger": false, "show_resource_report": false, "strict_mode": false, "defer": false, "log_format": "default", "write_json": true}}