{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-17T07:59:39.498170Z", "invocation_id": "42d30579-51ba-4140-af9b-c79d724a8c00", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:33.201083Z", "completed_at": "2024-04-17T07:59:33.211282Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:33.211282Z", "completed_at": "2024-04-17T07:59:33.643847Z"}], "thread_id": "Thread-1", "execution_time": 0.4427635669708252, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perptreated_data", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as \n(\n   select\n       stream      :: varchar as stream\n       ,\"data_e\"   :: varchar as event_type\n       ,\"data_E\"   :: bigint as event_time\n       ,\"data_s\"   :: varchar as symbole_src\n       ,\"data_k_t\" :: bigint as candle_open_time\n       ,\"data_k_T\" :: bigint as candle_close_time\n       ,\"data_k_s\" :: varchar as symbole\n       ,\"data_k_i\" :: varchar as interval\n       ,\"data_k_f\" :: int as first_trade_id\n       ,\"data_k_L\" :: int as last_trade_id\n       ,\"data_k_o\" :: decimal as openprice\n       ,\"data_k_c\" :: decimal as close_price\n       ,\"data_k_h\" :: decimal as high_price\n       ,\"data_k_l\" :: decimal as low_price\n       ,\"data_k_v\" :: int as base_asset_volume\n       ,\"data_k_n\" :: int as  nb_trades\n       ,\"data_k_x\" :: boolean as candle_closed\n       ,\"data_k_q\" :: decimal as quote_asset_volume\n       ,\"data_k_V\" :: decimal as taker_buy_base_asset_volume\n       ,\"data_k_Q\" :: decimal as taker_buy_quote_asset_volume\n    from wizetrading.raw_data\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:33.654236Z", "completed_at": "2024-04-17T07:59:33.654236Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:33.662329Z", "completed_at": "2024-04-17T07:59:34.035620Z"}], "thread_id": "Thread-1", "execution_time": 0.38138389587402344, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.raw_data_btc_perp", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as (\n    select * from source_btc_data\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"raw_data_btc_perp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:34.041634Z", "completed_at": "2024-04-17T07:59:34.042077Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:34.042077Z", "completed_at": "2024-04-17T07:59:34.378094Z"}], "thread_id": "Thread-1", "execution_time": 0.3398759365081787, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='15m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:34.383907Z", "completed_at": "2024-04-17T07:59:34.387916Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:34.388920Z", "completed_at": "2024-04-17T07:59:34.709674Z"}], "thread_id": "Thread-1", "execution_time": 0.326580286026001, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '15m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:34.719762Z", "completed_at": "2024-04-17T07:59:34.719762Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:34.719762Z", "completed_at": "2024-04-17T07:59:35.086379Z"}], "thread_id": "Thread-1", "execution_time": 0.36661624908447266, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:35.088588Z", "completed_at": "2024-04-17T07:59:35.103637Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:35.104759Z", "completed_at": "2024-04-17T07:59:35.458264Z"}], "thread_id": "Thread-1", "execution_time": 0.3696761131286621, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:35.464997Z", "completed_at": "2024-04-17T07:59:35.467201Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:35.467201Z", "completed_at": "2024-04-17T07:59:35.824515Z"}], "thread_id": "Thread-1", "execution_time": 0.35951805114746094, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1w'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:35.834612Z", "completed_at": "2024-04-17T07:59:35.844217Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:35.846212Z", "completed_at": "2024-04-17T07:59:36.179902Z"}], "thread_id": "Thread-1", "execution_time": 0.34729528427124023, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1w'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:36.185902Z", "completed_at": "2024-04-17T07:59:36.190897Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:36.191897Z", "completed_at": "2024-04-17T07:59:36.507997Z"}], "thread_id": "Thread-1", "execution_time": 0.3231010437011719, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='4h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:36.507997Z", "completed_at": "2024-04-17T07:59:36.507997Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:36.507997Z", "completed_at": "2024-04-17T07:59:36.841469Z"}], "thread_id": "Thread-1", "execution_time": 0.3491487503051758, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '4h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:36.858164Z", "completed_at": "2024-04-17T07:59:36.858164Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:36.858164Z", "completed_at": "2024-04-17T07:59:37.181201Z"}], "thread_id": "Thread-1", "execution_time": 0.33122873306274414, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='5m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:37.191799Z", "completed_at": "2024-04-17T07:59:37.199564Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:37.199564Z", "completed_at": "2024-04-17T07:59:37.520984Z"}], "thread_id": "Thread-1", "execution_time": 0.331392765045166, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '5m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:37.523192Z", "completed_at": "2024-04-17T07:59:37.533547Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:37.533547Z", "completed_at": "2024-04-17T07:59:37.870849Z"}], "thread_id": "Thread-1", "execution_time": 0.3498549461364746, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_15min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_15m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\"\n)\n,\nBTC_PERP_15m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\"\n),\nBTC_PERP_15m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_15m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_15m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_15m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_15m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_15m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:37.873047Z", "completed_at": "2024-04-17T07:59:37.883847Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:37.884860Z", "completed_at": "2024-04-17T07:59:38.209887Z"}], "thread_id": "Thread-1", "execution_time": 0.34503746032714844, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\"\n)\n,\nBTC_PERP_1h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\"\n),\nBTC_PERP_1h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:38.220284Z", "completed_at": "2024-04-17T07:59:38.228432Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:38.229689Z", "completed_at": "2024-04-17T07:59:38.547208Z"}], "thread_id": "Thread-1", "execution_time": 0.331218957901001, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1week_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1w_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\"\n)\n,\nBTC_PERP_1w_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\"\n),\nBTC_PERP_1w_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1w_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1w_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1w_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1w_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1w_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:38.555379Z", "completed_at": "2024-04-17T07:59:38.560296Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:38.561222Z", "completed_at": "2024-04-17T07:59:38.918090Z"}], "thread_id": "Thread-1", "execution_time": 0.3639051914215088, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_4hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_4h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\"\n)\n,\nBTC_PERP_4h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\"\n),\nBTC_PERP_4h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_4h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_4h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_4h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_4h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_4h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T07:59:38.928422Z", "completed_at": "2024-04-17T07:59:38.928422Z"}, {"name": "execute", "started_at": "2024-04-17T07:59:38.928422Z", "completed_at": "2024-04-17T07:59:39.279180Z"}], "thread_id": "Thread-1", "execution_time": 0.3507578372955322, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_5min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_5m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\"\n)\n,\nBTC_PERP_5m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\"\n),\nBTC_PERP_5m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_5m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_5m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_5m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_5m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_5m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_current_and_history\""}], "elapsed_time": 7.175109624862671, "args": {"exclude": [], "profiles_dir": "C:\\Users\\alarcher\\.dbt", "defer": false, "print": true, "log_format": "default", "vars": {}, "use_colors": true, "version_check": true, "printer_width": 80, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "partial_parse": true, "write_json": true, "select": [], "introspect": true, "log_level_file": "debug", "log_file_max_bytes": 10485760, "static_parser": true, "strict_mode": false, "quiet": false, "show_resource_report": false, "indirect_selection": "eager", "enable_legacy_logger": false, "invocation_command": "dbt run", "log_format_file": "debug", "log_path": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo\\logs", "send_anonymous_usage_stats": true, "use_colors_file": true, "which": "run", "macro_debugging": false, "cache_selected_only": false, "project_dir": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo", "partial_parse_file_diff": true, "log_level": "info", "favor_state": false}}