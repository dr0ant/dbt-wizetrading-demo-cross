{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-17T12:24:20.148680Z", "invocation_id": "b00d0687-8f9a-454c-bd0d-cddb5901f1a8", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:13.705393Z", "completed_at": "2024-04-17T12:24:13.714393Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:13.715431Z", "completed_at": "2024-04-17T12:24:14.137366Z"}], "thread_id": "Thread-1", "execution_time": 0.4359724521636963, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perptreated_data", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as \n(\n   select\n       stream      :: varchar as stream\n       ,\"data_e\"   :: varchar as event_type\n       ,\"data_E\"   :: bigint as event_time\n       ,\"data_s\"   :: varchar as symbole_src\n       ,\"data_k_t\" :: bigint as candle_open_time\n       ,\"data_k_T\" :: bigint as candle_close_time\n       ,\"data_k_s\" :: varchar as symbole\n       ,\"data_k_i\" :: varchar as interval\n       ,\"data_k_f\" :: int as first_trade_id\n       ,\"data_k_L\" :: int as last_trade_id\n       ,\"data_k_o\" :: decimal as openprice\n       ,\"data_k_c\" :: decimal as close_price\n       ,\"data_k_h\" :: decimal as high_price\n       ,\"data_k_l\" :: decimal as low_price\n       ,\"data_k_v\" :: int as base_asset_volume\n       ,\"data_k_n\" :: int as  nb_trades\n       ,\"data_k_x\" :: boolean as candle_closed\n       ,\"data_k_q\" :: decimal as quote_asset_volume\n       ,\"data_k_V\" :: decimal as taker_buy_base_asset_volume\n       ,\"data_k_Q\" :: decimal as taker_buy_quote_asset_volume\n    from wizetrading.raw_data\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:14.145946Z", "completed_at": "2024-04-17T12:24:14.149946Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:14.150946Z", "completed_at": "2024-04-17T12:24:14.507726Z"}], "thread_id": "Thread-1", "execution_time": 0.3652806282043457, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.raw_data_btc_perp", "compiled": true, "compiled_code": "with source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"raw_data\"\n),\nfinal as (\n    select * from source_btc_data\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"raw_data_btc_perp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:14.517268Z", "completed_at": "2024-04-17T12:24:14.521576Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:14.522577Z", "completed_at": "2024-04-17T12:24:14.861323Z"}], "thread_id": "Thread-1", "execution_time": 0.34716033935546875, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='15m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:14.867323Z", "completed_at": "2024-04-17T12:24:14.871322Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:14.873379Z", "completed_at": "2024-04-17T12:24:15.224096Z"}], "thread_id": "Thread-1", "execution_time": 0.36077213287353516, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '15m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:15.238764Z", "completed_at": "2024-04-17T12:24:15.247138Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:15.249138Z", "completed_at": "2024-04-17T12:24:15.595083Z"}], "thread_id": "Thread-1", "execution_time": 0.35938143730163574, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:15.603122Z", "completed_at": "2024-04-17T12:24:15.609082Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:15.611083Z", "completed_at": "2024-04-17T12:24:15.962270Z"}], "thread_id": "Thread-1", "execution_time": 0.36219191551208496, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:15.968329Z", "completed_at": "2024-04-17T12:24:15.973268Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:15.974316Z", "completed_at": "2024-04-17T12:24:16.314407Z"}], "thread_id": "Thread-1", "execution_time": 0.3481321334838867, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='1w'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:16.320403Z", "completed_at": "2024-04-17T12:24:16.324396Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:16.325453Z", "completed_at": "2024-04-17T12:24:16.657693Z"}], "thread_id": "Thread-1", "execution_time": 0.3412942886352539, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '1w'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:16.665416Z", "completed_at": "2024-04-17T12:24:16.670821Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:16.673134Z", "completed_at": "2024-04-17T12:24:17.004199Z"}], "thread_id": "Thread-1", "execution_time": 0.34166693687438965, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='4h'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:17.009577Z", "completed_at": "2024-04-17T12:24:17.013577Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:17.014578Z", "completed_at": "2024-04-17T12:24:17.356125Z"}], "thread_id": "Thread-1", "execution_time": 0.3496053218841553, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '4h'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:17.365183Z", "completed_at": "2024-04-17T12:24:17.370119Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:17.372118Z", "completed_at": "2024-04-17T12:24:17.714665Z"}], "thread_id": "Thread-1", "execution_time": 0.35254716873168945, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n        and interval ='5m'\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:17.721669Z", "completed_at": "2024-04-17T12:24:17.725668Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:17.725668Z", "completed_at": "2024-04-17T12:24:18.073981Z"}], "thread_id": "Thread-1", "execution_time": 0.3553147315979004, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_history", "compiled": true, "compiled_code": "-- This is now a dbt model file, not a raw SQL query\nwith source_btc_data as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perptreated_data\"\n),\nfinal as (\n    select * from source_btc_data\n    where 1=1\n         AND source_btc_data.interval::text = '5m'::text\n)\n\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:18.081981Z", "completed_at": "2024-04-17T12:24:18.088096Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:18.089091Z", "completed_at": "2024-04-17T12:24:18.432852Z"}], "thread_id": "Thread-1", "execution_time": 0.35486888885498047, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_15m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_15min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_15m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m\"\n)\n,\nBTC_PERP_15m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_history\"\n),\nBTC_PERP_15m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_15m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_15m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_15m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_15m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_15m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_15m_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:18.441515Z", "completed_at": "2024-04-17T12:24:18.447579Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:18.448593Z", "completed_at": "2024-04-17T12:24:18.825647Z"}], "thread_id": "Thread-1", "execution_time": 0.38613438606262207, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h\"\n)\n,\nBTC_PERP_1h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_history\"\n),\nBTC_PERP_1h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:18.830652Z", "completed_at": "2024-04-17T12:24:18.835589Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:18.836649Z", "completed_at": "2024-04-17T12:24:19.196300Z"}], "thread_id": "Thread-1", "execution_time": 0.3686532974243164, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_1w_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_1week_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_1w_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w\"\n)\n,\nBTC_PERP_1w_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_history\"\n),\nBTC_PERP_1w_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_1w_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_1w_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_1w_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_1w_btc_c_treated curr\n             LEFT JOIN BTC_PERP_1w_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_1w_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:19.202804Z", "completed_at": "2024-04-17T12:24:19.207801Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:19.208800Z", "completed_at": "2024-04-17T12:24:19.565651Z"}], "thread_id": "Thread-1", "execution_time": 0.3668506145477295, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_4h_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_4hour_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_4h_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h\"\n)\n,\nBTC_PERP_4h_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_history\"\n),\nBTC_PERP_4h_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_4h_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_4h_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_4h_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_4h_btc_c_treated curr\n             LEFT JOIN BTC_PERP_4h_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_4h_current_and_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-17T12:24:19.573593Z", "completed_at": "2024-04-17T12:24:19.579589Z"}, {"name": "execute", "started_at": "2024-04-17T12:24:19.580589Z", "completed_at": "2024-04-17T12:24:19.920735Z"}], "thread_id": "Thread-1", "execution_time": 0.3501441478729248, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_wizetrading.btc_perp_data_5m_current_and_history", "compiled": true, "compiled_code": "-- wizetrading.candle_5min_current_and_history source\n\n-- This is now a dbt model file, not a raw SQL query\nwith \nBTC_PERP_5m_btc_c as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m\"\n)\n,\nBTC_PERP_5m_btc_h as\n(\n    select * from \"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_history\"\n),\nBTC_PERP_5m_btc_c_treated as (\n    select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n    stream,\n    event_type,\n    event_time,\n    symbole_src,\n    candle_open_time,\n    candle_close_time,\n    symbole,\n    \"interval\",\n    first_trade_id,\n    last_trade_id,\n    openprice,\n    close_price,\n    high_price,\n    low_price,\n    base_asset_volume,\n    nb_trades,\n    candle_closed,\n    quote_asset_volume,\n    taker_buy_base_asset_volume,\n    taker_buy_quote_asset_volume\n    FROM BTC_PERP_5m_btc_c\n      WHERE candle_closed = false\n)\n,\nBTC_PERP_5m_btc_h_treated as (\n         select to_char(to_timestamp((event_time / 1000)::double precision), 'YYYY-MM-DD HH24:MI:SS'::text) AS formatted_datetime,\n         stream,\n         event_type,\n         event_time,\n         symbole_src,\n         candle_open_time,\n         candle_close_time,\n         symbole,\n         \"interval\",\n         first_trade_id,\n         last_trade_id,\n         openprice,\n         close_price,\n         high_price,\n         low_price,\n         base_asset_volume,\n         nb_trades,\n         candle_closed,\n         quote_asset_volume,\n         taker_buy_base_asset_volume,\n         taker_buy_quote_asset_volume\n        FROM BTC_PERP_5m_btc_h\n)\n,\npivot_curent AS (\n         select curr.formatted_datetime,\n         curr.stream,\n         curr.event_type,\n         curr.event_time,\n         curr.symbole_src,\n         curr.candle_open_time,\n         curr.candle_close_time,\n         curr.symbole,\n         curr.\"interval\",\n         curr.first_trade_id,\n         curr.last_trade_id,\n         curr.openprice,\n         curr.close_price,\n         curr.high_price,\n         curr.low_price,\n         curr.base_asset_volume,\n         curr.nb_trades,\n         curr.candle_closed,\n         curr.quote_asset_volume,\n         curr.taker_buy_base_asset_volume,\n         curr.taker_buy_quote_asset_volume,\n         lag(hist.openprice, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_1,\n         lag(hist.openprice, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_2,\n         lag(hist.openprice, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_3,\n         lag(hist.openprice, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_4,\n         lag(hist.openprice, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_5,\n         lag(hist.openprice, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_6,\n         lag(hist.openprice, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_7,\n         lag(hist.openprice, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_8,\n         lag(hist.openprice, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_9,\n         lag(hist.openprice, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS openprice_lag_10,\n         lag(hist.close_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_1,\n         lag(hist.close_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_2,\n         lag(hist.close_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_3,\n         lag(hist.close_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_4,\n         lag(hist.close_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_5,\n         lag(hist.close_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_6,\n         lag(hist.close_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_7,\n         lag(hist.close_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_8,\n         lag(hist.close_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_9,\n         lag(hist.close_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS close_price_lag_10,\n         lag(hist.high_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_1,\n         lag(hist.high_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_2,\n         lag(hist.high_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_3,\n         lag(hist.high_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_4,\n         lag(hist.high_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_5,\n         lag(hist.high_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_6,\n         lag(hist.high_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_7,\n         lag(hist.high_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_8,\n         lag(hist.high_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_9,\n         lag(hist.high_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS high_price_lag_10,\n         lag(hist.low_price, 1) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_1,\n         lag(hist.low_price, 2) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_2,\n         lag(hist.low_price, 3) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_3,\n         lag(hist.low_price, 4) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_4,\n         lag(hist.low_price, 5) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_5,\n         lag(hist.low_price, 6) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_6,\n         lag(hist.low_price, 7) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_7,\n         lag(hist.low_price, 8) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_8,\n         lag(hist.low_price, 9) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_9,\n         lag(hist.low_price, 10) OVER (PARTITION BY curr.event_time ORDER BY hist.event_time) AS low_price_lag_10,\n         row_number() OVER (PARTITION BY curr.event_time ORDER BY hist.event_time DESC) AS rank\n           FROM BTC_PERP_5m_btc_c_treated curr\n             LEFT JOIN BTC_PERP_5m_btc_h_treated hist ON curr.event_time >= hist.event_time\n          ORDER BY curr.event_time\n)\n,\nfinal as \n(\n    SELECT pivot_curent.formatted_datetime,\n    pivot_curent.stream,\n    pivot_curent.event_type,\n    pivot_curent.event_time,\n    pivot_curent.symbole_src,\n    pivot_curent.candle_open_time,\n    pivot_curent.candle_close_time,\n    pivot_curent.symbole,\n    pivot_curent.\"interval\",\n    pivot_curent.first_trade_id,\n    pivot_curent.last_trade_id,\n    pivot_curent.openprice,\n    pivot_curent.close_price,\n    pivot_curent.high_price,\n    pivot_curent.low_price,\n    pivot_curent.base_asset_volume,\n    pivot_curent.nb_trades,\n    pivot_curent.candle_closed,\n    pivot_curent.quote_asset_volume,\n    pivot_curent.taker_buy_base_asset_volume,\n    pivot_curent.taker_buy_quote_asset_volume,\n    pivot_curent.openprice_lag_1,\n    pivot_curent.openprice_lag_2,\n    pivot_curent.openprice_lag_3,\n    pivot_curent.openprice_lag_4,\n    pivot_curent.openprice_lag_5,\n    pivot_curent.openprice_lag_6,\n    pivot_curent.openprice_lag_7,\n    pivot_curent.openprice_lag_8,\n    pivot_curent.openprice_lag_9,\n    pivot_curent.openprice_lag_10,\n    pivot_curent.close_price_lag_1,\n    pivot_curent.close_price_lag_2,\n    pivot_curent.close_price_lag_3,\n    pivot_curent.close_price_lag_4,\n    pivot_curent.close_price_lag_5,\n    pivot_curent.close_price_lag_6,\n    pivot_curent.close_price_lag_7,\n    pivot_curent.close_price_lag_8,\n    pivot_curent.close_price_lag_9,\n    pivot_curent.close_price_lag_10,\n    pivot_curent.high_price_lag_1,\n    pivot_curent.high_price_lag_2,\n    pivot_curent.high_price_lag_3,\n    pivot_curent.high_price_lag_4,\n    pivot_curent.high_price_lag_5,\n    pivot_curent.high_price_lag_6,\n    pivot_curent.high_price_lag_7,\n    pivot_curent.high_price_lag_8,\n    pivot_curent.high_price_lag_9,\n    pivot_curent.high_price_lag_10,\n    pivot_curent.low_price_lag_1,\n    pivot_curent.low_price_lag_2,\n    pivot_curent.low_price_lag_3,\n    pivot_curent.low_price_lag_4,\n    pivot_curent.low_price_lag_5,\n    pivot_curent.low_price_lag_6,\n    pivot_curent.low_price_lag_7,\n    pivot_curent.low_price_lag_8,\n    pivot_curent.low_price_lag_9,\n    pivot_curent.low_price_lag_10,\n    pivot_curent.rank\n   FROM pivot_curent\n  WHERE pivot_curent.rank = 1\n)\nselect * from final", "relation_name": "\"aoavfbel\".\"wizetrading\".\"btc_perp_data_5m_current_and_history\""}], "elapsed_time": 7.395195960998535, "args": {"enable_legacy_logger": false, "introspect": true, "profiles_dir": "C:\\Users\\alarcher\\.dbt", "log_path": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo\\logs", "strict_mode": false, "which": "run", "send_anonymous_usage_stats": true, "use_colors_file": true, "quiet": false, "printer_width": 80, "partial_parse": true, "vars": {}, "write_json": true, "print": true, "use_colors": true, "log_level": "info", "select": [], "exclude": [], "log_format_file": "debug", "show_resource_report": false, "log_level_file": "debug", "log_format": "default", "macro_debugging": false, "project_dir": "C:\\Users\\alarcher\\Documents\\dbt\\dbt_env\\dbt_wizetrading\\dbt-wizetrading-demo", "indirect_selection": "eager", "cache_selected_only": false, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "populate_cache": true, "static_parser": true, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "defer": false, "favor_state": false, "invocation_command": "dbt run"}}